/*============================================================================
  Debut | Built with Shopify Slate

  Some things to know about this file:
    - Sass is compiled on Shopify's server so you don't need to convert it to CSS yourself
    - The output CSS is compressed and comments are removed
    - You cannot use native CSS/Sass @imports in this file without a build script
==============================================================================*/

/*================ SASS HELPERS ================*/
/*============================================================================
  Convert pixels to ems
  eg. for a relational value of 12px write em(12) when the parent is 16px
  if the parent is another value say 24px write em(12, 24)
  Based on https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/functions/_px-to-em.scss
==============================================================================*/
@function em($pxval, $base: $font-size-base) {
  @if not unitless($pxval) {
    $pxval: strip-units($pxval);
  }
  @if not unitless($base) {
    $base: strip-units($base);
  }
  @return ($pxval / $base) * 1em;
}

/*============================================================================
  Strips the unit from a number.
  @param {Number (With Unit)} $value
  @example scss - Usage
    $dimension: strip-units(10em);
  @example css - CSS Output
    $dimension: 10;
  @return {Number (Unitless)}
  based on https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/functions/_strip-units.scss
==============================================================================*/
@function strip-units($value) {
  @return ($value / ($value * 0 + 1));
}

/*============================================================================
  Prefix mixin for generating vendor prefixes.
  Based on https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_prefixer.scss

  Usage:
    // Input:
    .element {
      @include prefix(transform, scale(1), ms webkit spec);
    }

    // Output:
    .element {
      -ms-transform: scale(1);
      -webkit-transform: scale(1);
      transform: scale(1);
    }
==============================================================================*/

@mixin prefix($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    @if $prefix == webkit {
      -webkit-#{$property}: $value;
    } @else if $prefix == moz {
      -moz-#{$property}: $value;
    } @else if $prefix == ms {
      -ms-#{$property}: $value;
    } @else if $prefix == o {
      -o-#{$property}: $value;
    } @else if $prefix == spec {
      #{$property}: $value;
    } @else  {
      @warn 'Unrecognized prefix: #{$prefix}';
    }
  }
}

@mixin user-select($value: none) {
  @include prefix('user-select', #{$value}, moz ms webkit spec);
}

@mixin placeholder-text($color: $color-text-field-text, $opacity: 0.6) {
  color: $color;
  opacity: $opacity;
}

@mixin error-placeholder-text($color: $color-error-input-text, $opacity: 0.5) {
  color: $color;
  opacity: $opacity;
}

@mixin transform($transform) {
  @include prefix(transform, $transform, ms webkit spec);
}

@mixin transition($transition) {
  @include prefix(transition, $transition, ms webkit spec);
}

@mixin gradient($side, $from, $to) {
  background: -ms-linear-gradient($side, $from 0%, $to 100%);
  background: linear-gradient(to $side, $from 0%, $to 100%);
}

@mixin spinner($size: $icon-size, $color: $color-btn-primary-text) {
  content: '';
  display: block;
  width: $size;
  height: $size;
  position: absolute;
  margin-left: - $size / 2;
  margin-top: - $size / 2;
  border-radius: 50%;
  border: 3px solid $color;
  border-top-color: transparent;
}

// Toggle visibility + opacity + pointer-events
// @param {Boolean} $state - Switch visibility "on" `(true)` or "off" `(false)`. Defaults to `true`.
@mixin visible($isVisible: true) {
  @if ($isVisible) {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
  } @else {
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
  }
}

@mixin visually-hidden() {
  // sass-lint:disable no-important
  position: absolute !important;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

@mixin visually-shown() {
  // sass-lint:disable no-important
  position: inherit !important;
  overflow: auto;
  clip: auto;
  width: auto;
  height: auto;
  margin: 0;
}

@mixin overlay($z-index: null) {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: $color-image-overlay;
    opacity: $opacity-image-overlay;

    @if ($z-index) {
      z-index: $z-index;
    }
  }
}

@mixin default-focus-ring() {
  outline: 1px dotted #212121;
  outline: 5px auto -webkit-focus-ring-color;
}

@mixin display-flexbox() {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  // necessary for ie10
  width: 100%;
}

@mixin flex-wrap($value: nowrap) {
  @include prefix(flex-wrap, $value, webkit moz ms spec);
}

@mixin flex-direction($value) {
  @include prefix(flex-direction, $value, webkit moz ms spec);
}

@mixin align-items($value: stretch) {
  $alt-value: $value;

  @if $value == 'flex-start' {
    $alt-value: start;
  } @else if $value == 'flex-end' {
    $alt-value: end;
  }

  // sass-lint:disable no-misspelled-properties
  -ms-flex-align: $alt-value;
  @include prefix(align-items, $value, webkit moz ms o spec);
}

@mixin flex($value: 0 1 auto) {
  @include prefix(flex, $value, webkit moz ms spec);
}

@mixin flex-basis($width: auto) {
  // sass-lint:disable no-misspelled-properties
  -ms-flex-preferred-size: $width;
  @include prefix(flex-basis, $width, webkit moz spec);
}

@mixin align-self($align: auto) {
  // sass-lint:disable no-misspelled-properties
  -ms-flex-item-align: $align;
  @include prefix(align-self, $align, webkit spec);
}

@mixin align-content($align: center) {
  @include prefix(align-content, $align, webkit ms spec);
}

@mixin justify-content($justify: flex-start) {
  @include prefix(justify-content, $justify, webkit ms spec);
}



/*================ VARIABLES ================*/
/*============================================================================
  Grid Breakpoints and Class Names
    - Do not change the variable names
    - Breakpoint pixel values are used in the window.theme.breakpoints object
    - These values are hard-copied within `search.js` and must be kept in sync!
==============================================================================*/
$grid-medium: 750px;
$grid-large: 990px;
$grid-widescreen: 1400px;
$grid-gutter: 30px;
$grid-gutter-mobile: 22px;

$small: 'small';
$medium: 'medium';
$medium-down: 'medium-down';
$medium-up: 'medium-up';
$large: 'large';
$large-down: 'large-down';
$large-up: 'large-up';
$widescreen: 'widescreen';

// Transitions
$transition-duration-fast: 100ms;
$transition-duration: 250ms;
$transition-duration-slow: 400ms;
$transition-link-hover: $transition-duration-fast cubic-bezier(0.44, 0.13, 0.48, 0.87);
// Border colors
$color-border: #ebebeb;
// Backgrounds
$color-body: #ffffff;
$color-bg: #ffffff;

$color-bg-alt: rgba(51, 50, 50, 0.05);
/*================ Sizing Variables ================*/
$width-site: 1200px;
$gutter-site: 55px;
$gutter-site-mobile: 22px;
$section-spacing: 55px;
$section-spacing-small: 35px;
$border-radius: 2px;
$icon-size: 20px;
$connected-submit-size: $icon-size * 2.5;
/*============================================================================
  Return a color based on the brightness of an existing color.
  Need to pass in brightness because it is calculated with Liquid.
  @param {Number} $brightness
  @param {String} $color
  @example scss - Usage
    $focusColor: adaptiveColor(#000, 0);
  @example css - CSS Output
    $focusColor: #404040;
  @return {String}

  @adaptiveColor used for changing text
  @adaptiveBackgroundColor used for background colors where the change doesn't
  need to be as strong
==============================================================================*/
$font-size-header: 26 * 1px;

$font-size-base: 15px; // Henceforth known as 1em
$font-size-mobile-input: 16px; // min 16px to prevent zooming
@function adaptiveColor($color, $brightness) {
  @if $brightness <= 26 {
    @return lighten($color, 25%)
  }
  @if $brightness <= 64 {
    @return lighten($color, 15%)
  } @else {
    @return darken($color, 10%)
  }
}

@function adaptiveBackgroundColor($color, $brightness) {
  @if $brightness <= 26 {
    @return lighten($color, 15%)
  }
  @if $brightness <= 64 {
    @return lighten($color, 10%)
  } @else {
    @return darken($color, 5%)
  }
}

/*================ #Mixins ================*/
@mixin clearfix() {
  &::after {
    content: '';
    display: table;
    clear: both;
  }

  // sass-lint:disable no-misspelled-properties
  *zoom: 1;
}

/*================ Media Query Mixin ================*/
@mixin media-query($media-query) {
  $breakpoint-found: false;

  @each $breakpoint in $grid-breakpoints {
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);

    @if $media-query == $name and $declaration {
      $breakpoint-found: true;

      @media only screen and #{$declaration} {
        @content;
      }
    }
  }

  @if $breakpoint-found == false {
    @warn 'Breakpoint "#{$media-query}" does not exist';
  }
}

/*================ Responsive Show/Hide Helper ================*/
@mixin responsive-display-helper($grid-breakpoint-type: '') {
  // sass-lint:disable no-important
  .#{$grid-breakpoint-type}show {
    display: block !important;
  }

  .#{$grid-breakpoint-type}hide {
    display: none !important;
  }
}
/*================ Responsive Text Alignment Helper ================*/
@mixin responsive-text-align-helper($grid-breakpoint-type: '') {
  // sass-lint:disable no-important
  .#{$grid-breakpoint-type}text-left {
    text-align: left !important;
  }

  .#{$grid-breakpoint-type}text-right {
    text-align: right !important;
  }

  .#{$grid-breakpoint-type}text-center {
    text-align: center !important;
  }
}
/*============================================================================
  Animation Classes and Keyframes
==============================================================================*/
.is-transitioning {
  // sass-lint:disable no-important
  display: block !important;
  visibility: visible !important;
}

@mixin animation($animation) {
  @include prefix(animation, #{$animation}, moz o webkit spec);
}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

@mixin fade-transition-base($duration: $transition-duration) {
  transition-property: opacity, visibility;
  transition-duration: $duration;
  transition-timing-function: ease-in-out;
}

/*================ Responsive Text Alignment Helper ================*/
@mixin responsive-text-align-helper($grid-breakpoint-type: '') {
  // sass-lint:disable no-important
  .#{$grid-breakpoint-type}text-left {
    text-align: left !important;
  }

  .#{$grid-breakpoint-type}text-right {
    text-align: right !important;
  }

  .#{$grid-breakpoint-type}text-center {
    text-align: center !important;
  }
}

@mixin unstyled-button {
  appearance: none;
  margin: 0;
  padding: 0;
  background: none;
  border: none;
  font-size: inherit;
  line-height: inherit;
  cursor: pointer;
}

/*============================================================================
  #Grid
==============================================================================*/

// The `$grid-breakpoints` list is used to build our media queries.
// You can use these in the media-query mixin.
$grid-breakpoints: (
  $small '(max-width: #{$grid-medium - 1})',
  $medium '(min-width: #{$grid-medium}) and (max-width: #{$grid-large - 1})',
  $medium-down '(max-width: #{$grid-large - 1})',
  $medium-up '(min-width: #{$grid-medium})',
  $large '(min-width: #{$grid-large}) and (max-width: #{$grid-widescreen - 1})',
  $large-down '(max-width: #{$grid-widescreen - 1})',
  $large-up '(min-width: #{$grid-large})',
  $widescreen '(min-width: #{$grid-widescreen})'
);

/*============================================================================
  Grid Setup
    1. Allow the grid system to be used on lists.
    2. Remove any margins and paddings that might affect the grid system.
    3. Apply a negative `margin-left` to negate the columns' gutters.
==============================================================================*/
.grid {
  @include clearfix();
  list-style: none;
  margin: 0;
  padding: 0;
  margin-left: -$grid-gutter;

  @include media-query($small) {
    margin-left: -$grid-gutter-mobile;
  }
}

.grid__item {
  float: left;
  padding-left: $grid-gutter;
  width: 100%;

  @include media-query($small) {
    padding-left: $grid-gutter-mobile;
  }

  &[class*="--push"] {
    position: relative;
  }
}

/*============================================================================
  Reversed grids allow you to structure your source in the opposite
  order to how your rendered layout will appear.
==============================================================================*/
.grid--rev {
  direction: rtl;
  text-align: left;

  > .grid__item {
    direction: ltr;
    text-align: left;
    float: right;
  }
}

/*============================================================================
  Grid Columns
    - Create width classes, prepended by the breakpoint name.
==============================================================================*/
// sass-lint:disable brace-style empty-line-between-blocks
@mixin grid-column-generator($grid-breakpoint-type: '') {
  /* Whole */
  .#{$grid-breakpoint-type}one-whole { width: 100%; }

  /* Halves */
  .#{$grid-breakpoint-type}one-half { width: percentage(1 / 2); }

  /* Thirds */
  .#{$grid-breakpoint-type}one-third { width: percentage(1 / 3); }
  .#{$grid-breakpoint-type}two-thirds { width: percentage(2 / 3); }

  /* Quarters */
  .#{$grid-breakpoint-type}one-quarter { width: percentage(1 / 4); }
  .#{$grid-breakpoint-type}two-quarters { width: percentage(2 / 4); }
  .#{$grid-breakpoint-type}three-quarters { width: percentage(3 / 4); }

  /* Fifths */
  .#{$grid-breakpoint-type}one-fifth { width: percentage(1 / 5); }
  .#{$grid-breakpoint-type}two-fifths { width: percentage(2 / 5); }
  .#{$grid-breakpoint-type}three-fifths { width: percentage(3 / 5); }
  .#{$grid-breakpoint-type}four-fifths { width: percentage(4 / 5); }

  /* Sixths */
  .#{$grid-breakpoint-type}one-sixth { width: percentage(1 / 6); }
  .#{$grid-breakpoint-type}two-sixths { width: percentage(2 / 6); }
  .#{$grid-breakpoint-type}three-sixths { width: percentage(3 / 6); }
  .#{$grid-breakpoint-type}four-sixths { width: percentage(4 / 6); }
  .#{$grid-breakpoint-type}five-sixths { width: percentage(5 / 6); }

  /* Eighths */
  .#{$grid-breakpoint-type}one-eighth { width: percentage(1 / 8); }
  .#{$grid-breakpoint-type}two-eighths { width: percentage(2 / 8); }
  .#{$grid-breakpoint-type}three-eighths { width: percentage(3 / 8); }
  .#{$grid-breakpoint-type}four-eighths { width: percentage(4 / 8); }
  .#{$grid-breakpoint-type}five-eighths { width: percentage(5 / 8); }
  .#{$grid-breakpoint-type}six-eighths { width: percentage(6 / 8); }
  .#{$grid-breakpoint-type}seven-eighths { width: percentage(7 / 8); }

  /* Tenths */
  .#{$grid-breakpoint-type}one-tenth { width: percentage(1 / 10); }
  .#{$grid-breakpoint-type}two-tenths { width: percentage(2 / 10); }
  .#{$grid-breakpoint-type}three-tenths { width: percentage(3 / 10); }
  .#{$grid-breakpoint-type}four-tenths { width: percentage(4 / 10); }
  .#{$grid-breakpoint-type}five-tenths { width: percentage(5 / 10); }
  .#{$grid-breakpoint-type}six-tenths { width: percentage(6 / 10); }
  .#{$grid-breakpoint-type}seven-tenths { width: percentage(7 / 10); }
  .#{$grid-breakpoint-type}eight-tenths { width: percentage(8 / 10); }
  .#{$grid-breakpoint-type}nine-tenths { width: percentage(9 / 10); }

  /* Twelfths */
  .#{$grid-breakpoint-type}one-twelfth { width: percentage(1 / 12); }
  .#{$grid-breakpoint-type}two-twelfths { width: percentage(2 / 12); }
  .#{$grid-breakpoint-type}three-twelfths { width: percentage(3 / 12); }
  .#{$grid-breakpoint-type}four-twelfths { width: percentage(4 / 12); }
  .#{$grid-breakpoint-type}five-twelfths { width: percentage(5 / 12); }
  .#{$grid-breakpoint-type}six-twelfths { width: percentage(6 / 12); }
  .#{$grid-breakpoint-type}seven-twelfths { width: percentage(7 / 12); }
  .#{$grid-breakpoint-type}eight-twelfths { width: percentage(8 / 12); }
  .#{$grid-breakpoint-type}nine-twelfths { width: percentage(9 / 12); }
  .#{$grid-breakpoint-type}ten-twelfths { width: percentage(10 / 12); }
  .#{$grid-breakpoint-type}eleven-twelfths { width: percentage(11 / 12); }
}

/*================ Grid push classes ================*/
@mixin grid-push-generator($grid-breakpoint-type: '') {
  /* Halves */
  .#{$grid-breakpoint-type}push-one-half { left: percentage(1 / 2); }

  /* Thirds */
  .#{$grid-breakpoint-type}push-one-third { left: percentage(1 / 3); }
  .#{$grid-breakpoint-type}push-two-thirds { left: percentage(2 / 3); }

  /* Quarters */
  .#{$grid-breakpoint-type}push-one-quarter { left: percentage(1 / 4); }
  .#{$grid-breakpoint-type}push-two-quarters { left: percentage(2 / 4); }
  .#{$grid-breakpoint-type}push-three-quarters { left: percentage(3 / 4); }

  /* Fifths */
  .#{$grid-breakpoint-type}push-one-fifth { left: percentage(1 / 5); }
  .#{$grid-breakpoint-type}push-two-fifths { left: percentage(2 / 5); }
  .#{$grid-breakpoint-type}push-three-fifths { left: percentage(3 / 5); }
  .#{$grid-breakpoint-type}push-four-fifths { left: percentage(4 / 5); }

  /* Sixths */
  .#{$grid-breakpoint-type}push-one-sixth { left: percentage(1 / 6); }
  .#{$grid-breakpoint-type}push-two-sixths { left: percentage(2 / 6); }
  .#{$grid-breakpoint-type}push-three-sixths { left: percentage(3 / 6); }
  .#{$grid-breakpoint-type}push-four-sixths { left: percentage(4 / 6); }
  .#{$grid-breakpoint-type}push-five-sixths { left: percentage(5 / 6); }

  /* Eighths */
  .#{$grid-breakpoint-type}push-one-eighth { left: percentage(1 / 8); }
  .#{$grid-breakpoint-type}push-two-eighths { left: percentage(2 / 8); }
  .#{$grid-breakpoint-type}push-three-eighths { left: percentage(3 / 8); }
  .#{$grid-breakpoint-type}push-four-eighths { left: percentage(4 / 8); }
  .#{$grid-breakpoint-type}push-five-eighths { left: percentage(5 / 8); }
  .#{$grid-breakpoint-type}push-six-eighths { left: percentage(6 / 8); }
  .#{$grid-breakpoint-type}push-seven-eighths { left: percentage(7 / 8); }

  /* Tenths */
  .#{$grid-breakpoint-type}push-one-tenth { left: percentage(1 / 10); }
  .#{$grid-breakpoint-type}push-two-tenths { left: percentage(2 / 10); }
  .#{$grid-breakpoint-type}push-three-tenths { left: percentage(3 / 10); }
  .#{$grid-breakpoint-type}push-four-tenths { left: percentage(4 / 10); }
  .#{$grid-breakpoint-type}push-five-tenths { left: percentage(5 / 10); }
  .#{$grid-breakpoint-type}push-six-tenths { left: percentage(6 / 10); }
  .#{$grid-breakpoint-type}push-seven-tenths { left: percentage(7 / 10); }
  .#{$grid-breakpoint-type}push-eight-tenths { left: percentage(8 / 10); }
  .#{$grid-breakpoint-type}push-nine-tenths { left: percentage(9 / 10); }

  /* Twelfths */
  .#{$grid-breakpoint-type}push-one-twelfth { left: percentage(1 / 12); }
  .#{$grid-breakpoint-type}push-two-twelfths { left: percentage(2 / 12); }
  .#{$grid-breakpoint-type}push-three-twelfths { left: percentage(3 / 12); }
  .#{$grid-breakpoint-type}push-four-twelfths { left: percentage(4 / 12); }
  .#{$grid-breakpoint-type}push-five-twelfths { left: percentage(5 / 12); }
  .#{$grid-breakpoint-type}push-six-twelfths { left: percentage(6 / 12); }
  .#{$grid-breakpoint-type}push-seven-twelfths { left: percentage(7 / 12); }
  .#{$grid-breakpoint-type}push-eight-twelfths { left: percentage(8 / 12); }
  .#{$grid-breakpoint-type}push-nine-twelfths { left: percentage(9 / 12); }
  .#{$grid-breakpoint-type}push-ten-twelfths { left: percentage(10 / 12); }
  .#{$grid-breakpoint-type}push-eleven-twelfths { left: percentage(11 / 12); }
}

/*================ Clearfix helper on uniform grids ================*/
@mixin grid-uniform-clearfix($grid-breakpoint-type: '') {
  .grid--uniform {
    .#{$grid-breakpoint-type}one-half:nth-child(2n+1),
    .#{$grid-breakpoint-type}one-third:nth-child(3n+1),
    .#{$grid-breakpoint-type}one-quarter:nth-child(4n+1),
    .#{$grid-breakpoint-type}one-fifth:nth-child(5n+1),
    .#{$grid-breakpoint-type}one-sixth:nth-child(6n+1),
    .#{$grid-breakpoint-type}two-sixths:nth-child(3n+1),
    .#{$grid-breakpoint-type}three-sixths:nth-child(2n+1),
    .#{$grid-breakpoint-type}one-eighth:nth-child(8n+1),
    .#{$grid-breakpoint-type}two-eighths:nth-child(4n+1),
    .#{$grid-breakpoint-type}four-eighths:nth-child(2n+1),
    .#{$grid-breakpoint-type}five-tenths:nth-child(2n+1),
    .#{$grid-breakpoint-type}one-twelfth:nth-child(12n+1),
    .#{$grid-breakpoint-type}two-twelfths:nth-child(6n+1),
    .#{$grid-breakpoint-type}three-twelfths:nth-child(4n+1),
    .#{$grid-breakpoint-type}four-twelfths:nth-child(3n+1),
    .#{$grid-breakpoint-type}six-twelfths:nth-child(2n+1) { clear: both; }
  }
}

// sass-lint:enable brace-style empty-line-between-blocks
$grid-breakpoint-has-widths: ($small, $medium-up);
$grid-breakpoint-has-push: ($small, $medium-up);
/*================ Build Base Grid Classes ================*/
@include grid-column-generator();
@include responsive-display-helper();
@include responsive-text-align-helper();

/*================ Build Responsive Grid Classes ================*/
@each $breakpoint in $grid-breakpoint-has-widths {
  @include media-query($breakpoint) {
    @include grid-column-generator('#{$breakpoint}--');
    @include grid-uniform-clearfix('#{$breakpoint}--');
    @include responsive-display-helper('#{$breakpoint}--');
    @include responsive-text-align-helper('#{$breakpoint}--');
  }
}

/*================ Build Grid Push Classes ================*/
@each $breakpoint in $grid-breakpoint-has-push {
  @include media-query($breakpoint) {
    @include grid-push-generator('#{$breakpoint}--');
  }
}

/*============================================================================
  Generate breakpoint-specific column widths and push classes
    - Default column widths: $grid-breakpoint-has-widths: ($small, $medium-up);
    - Default is no push classes
==============================================================================*/

/*================ Color Variables ================*/
$color-drawer-background: rgba(0, 0, 0, 0.6);
// Text colors
$color-text: #3a3a3a;
$color-text-shadow: rgba(0,0,0,0.4);
$color-body-text: #333232;
$color-sale-text: #fa4545;
$color-small-button-text-border: #3a3a3a;
$color-text-field: #ffffff;
$color-text-field-text: #000000;
$color-navigation-text: #3a3a3a;
/*================ Z-Index ================*/
$z-index-base: 1;
$z-index-dropdown : 7;
$z-index-sub-nav: 8;
$z-index-drawer: 9;
$z-index-announcement-bar: 10;
$z-index-mobile-nav: 11;
$z-index-search-bar: 999;
$z-index-predictive-search-wrapper: 1000;
$z-index-skip-to-content: 10000; // really high to be safe of app markup
/*================ Drawers ================*/
$transition-drawer: all $transition-duration-slow cubic-bezier(0.29, 0.63, 0.44, 1);
$predictive-search-focus: adaptiveBackgroundColor(#ffffff, 255.0);
/*================ #Basic Styles ================*/
// Button colors
$color-btn-primary: #3a3a3a;
$color-btn-primary-text: #ffffff;

// Hover and focus states
$color-text-focus: adaptiveColor(#3a3a3a, 58.0);
$color-overlay-text-focus: adaptiveColor(#ffffff, 255.0);
$color-btn-primary-focus: adaptiveColor(#3a3a3a, 58.0);
$color-btn-social-focus: adaptiveColor(#ebebeb, 235.0);
$color-small-button-text-border-focus: adaptiveColor(#3a3a3a, 58.0);

// Link buttons and secondary cta
$color-link: $color-body-text;
$opacity-link-hover: 0.6;





// Overlays
$color-overlay-title-text: #ffffff;
$color-image-overlay: #685858;
$opacity-image-overlay: 0.4;;


  ;

$hover-overlay-opacity: 0.8;


$color-border-form: #cccccc;

// Helper colors for form error states
$color-disabled: #f4f4f4;
$color-disabled-border: #f4f4f4;
$color-error: #d20000;
$color-error-message-list: #651818;
$color-error-bg: #fff8f8;
$color-success: #1F873D;
$color-success-bg: #f8fff9;

// Forms
$color-form-text: #333;
$color-error-input-text: $color-error;
$input-padding-top-bottom: 10px;
$input-padding-left-right: 18px;
$input-padding-top-bottom-small: 8px;
$input-padding-left-right-small: 15px;
$input-group-height: 46px;
$input-group-height-small: 42px;
$input-border-width: 1px;

// Social icons
$color-facebook: #3b5998;
$color-twitter: #00aced;
$color-pinterest: #cb2027;


$section-spacing-small: 1em;
.section-header {
  margin-bottom: $section-spacing-small;

  
}

.site-header__cart,
.site-header__search,
.site-header__account {
  position: relative;
}

.site-header__search {
  .no-svg & {
    display: inline-block;
  }

  &.site-header__icon {
    display: none;

    @include media-query($widescreen) {
      display: block;
    }
  }
}

.site-header__search-toggle {
  display: block;
}

.site-header__account,
.site-header__cart {
  @include media-query($medium-up) {
    padding: 10px 11px;
  }
}

.site-header__cart-title,
.site-header__search-title {

  display: block;
  vertical-align: middle;
}

.site-header__cart-title {
  margin-right: 3px;
}

.site-header__cart-count {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  right: 0.4rem;
  top: 0.2rem;
  font-weight: bold;
  background-color: $color-btn-primary;
  color: $color-btn-primary-text;
  border-radius: 50%;
  min-width: 1em;
  height: 1em;

  span {
  
    font-size: calc(11em / 16);
    line-height: 1;
  }
}

.site-header__cart-count {
  @include media-query($small) {
    top: calc(7em / 16);
    right: 0;
    border-radius: 50%;
    min-width: calc(19em / 16);
    height: calc(19em / 16);
  }

  span {
    @include media-query($small) {
      padding: 0.25em calc(6em / 16);
      font-size: 12px;
    }
  }
}

.site-header__menu {
  display: none;
}

.site-header__icon {
  @include media-query($small) {
    display: inline-block;
    vertical-align: middle;
    padding: 10px 11px;
    margin: 0;
  }

  .icon-search {

    @include media-query($medium-up) {
      margin-right: 3px;
    }
  }
}
.site-nav {
  position: relative;
  padding: 0;
  text-align: center;
  margin: 25px 0;

  a {
    padding: 3px 10px;
  }
}

.site-nav--centered {
  padding-bottom: $gutter-site-mobile;
}

/*================ Site Nav Links ================*/
header,
menu,
nav{
  display: block;
}
.site-nav__link {
  display: block;
  white-space: nowrap;

  .site-nav--centered & {
    padding-top: 0;
  }

  .icon-chevron-down {
    width: calc(8em / 16);
    height: calc(8em / 16);
    margin-left: 0.5rem;
  }

  &.site-nav--active-dropdown {
    border: 1px solid $color-border;
    border-bottom: 1px solid transparent;
    z-index: 2;
  }

  &:focus,
  &:not([disabled]):hover {
    .site-nav__label {
      border-bottom-color: $color-text;
    }
  }
}

.site-nav__label {
  border-bottom: 1px solid transparent;

  .site-nav__link--active & {
    border-bottom-color: $color-text;
  }
}

.site-nav__link--button {
  border: none;
  background-color: transparent;
  padding: 3px 10px;



  &:focus,
  &:hover {
    color: $color-text-focus;
  }
}

/*================ Dropdowns ================*/
.site-nav--has-dropdown {
  position: relative;
}

.site-nav--has-centered-dropdown {
  position: static;
}

.site-nav__dropdown {
  display: none;
  position: absolute;
  padding: 11px 30px 11px 0;
  margin: 0;
  z-index: $z-index-dropdown;
  text-align: left;
  border: 1px solid $color-border;
  background: $color-bg;
  left: -1px;
  top: 41px;

  .site-nav__link {
    padding: 4px 15px 5px;
  }

  .site-nav--active-dropdown & {
    display: block;
  }

  li {
    display: block;
  }
}

.site-nav__dropdown--right:not(.site-nav__dropdown--centered) {
  right: 0;
  left: unset;
}

.site-nav__dropdown--left:not(.site-nav__dropdown--centered) {
  left: 0;
}

// Centered dropdown
.site-nav__dropdown--centered {
  width: 100%;
  padding: 0;
  text-align: center;
}

.drawer {
  // sass-lint:disable no-misspelled-properties
  display: none;
  position: fixed;
  -webkit-overflow-scrolling: touch;
  z-index: $z-index-drawer;

  .js-drawer-open-top & {
    display: block;
  }
}

.js-drawer-open {
  overflow: hidden;
  position: fixed;
  width: 100%;
}

.drawer--top {
  width: 100%;
  @include transform(translateY(-100%));

  .js-drawer-open-top & {
    @include transform(translateY(0%));
    display: flex;
    max-height: 100vh;
  }
}

.drawer-page-content {
  &::after {
    @include visible(false);
    content: '';
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: $color-drawer-background;
    z-index: $z-index-drawer - 1;
    transition: $transition-drawer;
  }

  .js-drawer-open &::after {
    @include visible;
  }
}

.drawer__title,
.drawer__close {
  display: table-cell;
  vertical-align: middle;
}

.drawer__close-button {
  background: none;
  border: 0 none;
  position: relative;
  right: -15px;
  height: 100%;
  width: 60px;
  padding: 0 $icon-size;
  color: inherit;
  font-size: em(18);

  &:active,
  &:focus {
    background-color: darken($color-drawer-background, 5%);
  }
}

/*================ Child list ================*/
.site-nav__childlist {
  display: inline-block;
  background: $color-bg;
  padding: 11px 17px;
  text-align: left;
}

.site-nav__childlist-grid {
  @include display-flexbox();
  @include flex-wrap(wrap);
  width: auto;
  margin-bottom: -15px;
}

.site-nav__childlist-item {
  @include flex(0 1 auto);
  margin-bottom: 15px;
}

.site-nav__child-link--parent {

  margin: 4px 0;
}

.list--inline {
  padding: 0;
  margin: 0;

  & > li {
    display: inline-block;
    margin-bottom: 0;
    vertical-align: middle;
  }
}
/*================ Variables ================*/
$common-search-input-padding: 12px;
$search-form-clear-size: 24px;
$search-clear-button-hover: rgba($color-text-field-text, 0.2);
$search-bar-button-hover: rgba($color-text-field-text, 0.6);


@mixin common-search-submit {
  z-index: $z-index-base;
  position: absolute;
  right: 0;
  top: 0;
  display: inline-block;
  padding: 0 $common-search-input-padding;
  height: 100%;
  vertical-align: middle;
}

@mixin common-search-input {
  padding-right: 45px;
  width: 100%;
  min-height: 44px;
  color: $color-text-field-text;
  // Reset some input styles
  background-color: $color-text-field;
  border: none;
}

///
/// Search Form

.search-form__input-wrapper {
  position: relative;
}

.search-form__input {
  @include common-search-input;
  border: 1px solid $color-border-form;

  &::-ms-clear {
    display: none;
  }

  &::-webkit-search-cancel-button {
    display: none;
  }

  &::placeholder {
    @include placeholder-text($color-text-field-text);
  }

  &:-ms-input-placeholder { /* Internet Explorer 10-11 */
    @include placeholder-text($color-text-field-text);
  }

  &::-ms-input-placeholder { /* Microsoft Edge */
    @include placeholder-text($color-text-field-text);
  }

  .no-svg & {
    width: auto;
    padding-left: 35px;
  }
}

.search-form__clear-action {
  @include unstyled-button;
  @include visible(false);
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  top: 50%;
  margin-top: -$search-form-clear-size / 2;
  right: 10px;
  width: $search-form-clear-size;
  height: $search-form-clear-size;
  border-radius: 50%;
  background-color: transparent;
  transition-property: opacity, visibility, background-color, transform;
  transition-duration: $transition-duration-fast;
  transition-timing-function: ease-in-out;

  .icon-close {
    flex: 1 1 auto;
    width: $search-form-clear-size / 2;
    height: $search-form-clear-size / 2;
    fill: $color-text-field-text;
  }

  &:focus,
  &:hover {
    background-color: $search-clear-button-hover;
  }

  &:active {
    transform: scale(0.9);
  }

  &.predictive-search__clear-button--visible {
    @include visible(true);
  }

  .search-bar__form & {
    right: ($common-search-input-padding * 2) + $icon-size;
  }
}

// Showing/hiding clear button on desktop
.search-form--focus .predictive-search__clear-button--visible {
  @include visible(true);
}

// Showing/hiding clear button on search page
.search-page-form .predictive-search__clear-button--visible {
  @include visible(true);
}

.search-form__connected-submit {
  @include unstyled-button;
  flex: 0 0 auto;
  display: flex;
  align-items: center;
  justify-content: center;
  width: $connected-submit-size;
  background-color: $color-btn-primary;
  border-radius: 0 $border-radius $border-radius 0;
  transition: background-color $transition-duration-fast ease-in-out;

  &:focus,
  &:hover {
    background-color: darken($color-btn-primary, 10%);
  }

  &:active {
    background-color: $color-btn-primary;
  }

  .icon-search {
    fill: $color-btn-primary-text;
    width: $icon-size;
    height: $icon-size;
  }
}

///
/// Search Bar (mobile)

.search-bar {
  z-index: $z-index-search-bar;
  background-color: $color-body;
}

.search-bar__interior {
  height: 100%;
  display: flex;
  flex: 1;

  @include media-query($medium-up) {
    padding-left: $gutter-site;
    padding-right: $gutter-site;
    height: auto;
  }
}

.search-form__container {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  padding-left: $gutter-site-mobile - $input-padding-left-right-small;
  padding-right: $gutter-site-mobile - $common-search-input-padding;
  background-color: $color-bg;
}

.search-bar__form {
  flex: 1 1 100%;
  position: relative;
  max-width: $grid-medium;
  border: 1px solid transparent;
}

/// Search bar (mobile) Actions

.search-bar__actions {
  display: flex;
  flex: 0 0 auto;
  align-items: center;
}

.search-bar__submit {
  @include common-search-submit;
  background-color: transparent;
  border: 0;
  margin: 0;
  color: $color-text-field-text;

  .icon {
    position: relative;
    top: -1px;
    width: 1.2rem;
    height: auto;
  }

  &:hover, &:focus {
    color: $search-bar-button-hover;
  }
}

.search-bar__input {
  @include common-search-input;
  border: 1px solid $color-border-form;
}

.search-bar__close {
  padding: calc(10em / 16) .75em;
  margin-right: -($gutter-site-mobile - $common-search-input-padding);

  .icon {
    width: 1rem;
    height: auto;
  }
}

.search--less-than-2-results {
  height: 40vh;
}

$predictive-search-image-size: 44px;
$predictive-search-list-padding: 14px;
$predictive-search-heading-title-font-size: em($font-size-base - 2px);
$predictive-search-vendor-font-size: em($font-size-base - 3);
$predictive-search-hover-and-select-background-color: $predictive-search-focus;

.predictive-search-wrapper {
  @include fade-transition-base($transition-duration-fast);
  z-index: $z-index-predictive-search-wrapper;
  position: absolute;
  left: 0;
  right: 0;
  margin-top: -$input-border-width;
  border: $input-border-width solid $color-border-form;
  background-color: $color-bg;
  overflow-y: auto;
  display: none;

  .search-bar & {
    position: fixed;
    width: 100%;

    @include media-query($small) {
      border: none;
    }

    @include media-query($medium-up) {
      position: absolute;
      right: auto;
      left: auto;
      max-width: $grid-medium - ($input-border-width * 2);
    }
  }


  @include media-query($medium-up) {
    max-height: 80vh;
  }

  .search-page-form & {
    max-height: 60vh;
  }
}

.predictive-search-wrapper--drawer {
  @include media-query($small) {
    padding-top: $predictive-search-list-padding;
    margin-top: 3px;
  }
}

.predictive-search-wrapper--visible {
  display: block;
}

.predictive-search {
  height: 100%;
  text-align: left;

  // We swap `overflow-y` with the parent `wrapper`
  // as we are full height with padding-bottom for mobile
  .search-bar & {
    @include media-query($medium-down) {
      overflow-y: auto;
      -webkit-overflow-scrolling: touch;
    }
  }
}

///
/// Loading

.predictive-search-loading {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  padding: $predictive-search-list-padding 0;
  text-align: center;
}

.icon-predictive-search-spinner {
  &::before {
    content: '';
    display: block;
    width: 28px;
    height: 28px;
    border-radius: 50%;
    border: 4px solid;
    border-color: currentColor currentColor currentColor transparent;
    @include animation(spin 500ms infinite linear);
  }
}

.predictive-search-loading__icon {
  display: inline-block;
  margin: 0;
  color: $color-body-text;
  width: $icon-size;
  height: $icon-size;

  .icon-predictive-search-spinner::before {
    width: 100%;
    height: 100%;
    border-width: 3px;
  }
}

///
/// Title

.predictive-search-title {
  position: relative;
  display: flex;
  align-items: center;
  padding: $predictive-search-list-padding;

  &::before {
    content: '';
    position: absolute;
    right: 0;
    top: 0;
    left: 0;
    height: 0;
    background-color: $color-border;
  }

  &::after {
    content: '';
    position: absolute;
    right: $predictive-search-list-padding;
    bottom: -$input-border-width;
    left: $predictive-search-list-padding;
    height: $input-border-width;
    background-color: $color-border;
  }
}

.predictive-search-wrapper--drawer .predictive-search-title {
  @include media-query($small) {
    &::before {
      height: $input-border-width;
    }
  }
}
.predictive-search-title__content {
  flex: 1 1 auto;
  margin-bottom: 0;
  padding-right: $icon-size * 2;
  font-size: $predictive-search-heading-title-font-size;

  text-transform: uppercase;
  color: $color-body-text;
  white-space: normal;
}

.predictive-search-title__loading-spinner {
  flex: 0 0 auto;
  position: absolute;
  top: 50%;
  right: $predictive-search-list-padding;
  margin-top: -($icon-size / 2);
  width: $icon-size;
  height: $icon-size;
  color: $color-body-text;

  .icon-predictive-search-spinner::before {
    width: 100%;
    height: 100%;
    border-width: 3px;
  }
}

///
/// Items

.predictive-search-item {
  font-weight: 400;
  white-space: normal;
}

.predictive-search-item__details {
  display: flex;
  width: 100%;
  flex-wrap: wrap;
  flex-direction: column;
  margin-top: 0;
  margin-bottom: 0;
}

.predictive-search-item__detail--inline {
  display: flex;
  flex-direction: row;
}

.predictive-search-item__link {
  display: flex;
  padding: $predictive-search-list-padding;
  background-color: transparent;
  transition: background-color $transition-duration-fast ease-in-out;

  &:active {
    background-color: transparent;
  }
}

.predictive-search-item--selected .predictive-search-item__link,
.predictive-search-item--selected .predictive-search-view-all__button,
.predictive-search-item__link:hover
{
  background-color: $predictive-search-hover-and-select-background-color;

  .predictive-search-item__title-text {
    border-bottom-color: $color-text;
  }
}

.predictive-search__column {
  flex: 1 1 auto;
}

.predictive-search__column--image {
  flex-grow: 0;
  flex-shrink: 0;
  width: $predictive-search-image-size;
  height: $predictive-search-image-size;
  margin-right: 12px;
  position: relative;
}

.predictive-search-item__image {
  object-fit: contain;
  font-family: "object-fit: contain";
  width: 100%;
  height: 100%;
}

.predictive-search__column--content {
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
}

.predictive-search__column--center {
  justify-content: center;
}

.predictive-search-item__title-text {
  display: inline-block;
  color: $color-text;
  word-break: break-word;
  border-bottom: 1px solid transparent;
  line-height: 1.2;

}

.predictive-search-item__vendor {
  color: $color-body-text;
  font-size: $predictive-search-vendor-font-size;
  text-transform: uppercase;
}

.predictive-search-item__price {
  padding-top: 6px;
  flex: 0 0 auto;
  color: $color-body-text;
}

.predictive-search-item__price--sale {
  color: $color-sale-text;
}

.predictive-search-item__price--compare {
  text-decoration: line-through;
}

// View all
.predictive-search-view-all, .predictive-search-loading {
  border-top: 1px solid $color-border;

  @include media-query($medium-up) {
    .predictive-search__list &:first-child {
      border-top: none;
    }
  }
}

.predictive-search-view-all__button {
  display: block;
  width: 100%;
  border: none;
  padding: $predictive-search-list-padding;
  text-align: left;
  color: $color-text;
  background-color: transparent;
  word-break: break-word;
  white-space: normal;


  &:hover,
  &:focus {
    background-color: $predictive-search-hover-and-select-background-color;
  }
}

$return-button-width: 55px;
$nav-button-padding: 15px;

/*================ #Site Nav and Dropdowns ================*/
.site-header__logo {
  img {
    display: block;
  }
}

/*================ Mobile Site Nav ================*/
.mobile-nav {
  display: block;
  @include transform(translate3d(0, 0, 0));
  transition: $transition-drawer;

  .sub-nav--is-open & {
    @include transform(translate3d(-100%, 0, 0));
  }

  .third-nav--is-open & {
    @include transform(translate3d(-200%, 0, 0));
  }
}

.mobile-nav__link,
.mobile-nav__sublist-link {
  display: block;
  width: 100%;
  padding: $nav-button-padding ($nav-button-padding * 2);

}

.mobile-nav__link {
  position: relative;
}

.mobile-nav__label {
  border-bottom: 1px solid transparent;

  .mobile-nav__link--active & {
    border-bottom-color: $color-text;
  }
}

.mobile-nav__sublist-link:not(.mobile-nav__sublist-header) {
  padding-left: $return-button-width + $nav-button-padding;
  padding-right: ($nav-button-padding * 2);
}

.mobile-nav__item {
  display: block;
  width: 100%;

  .icon {
    position: absolute;
    top: 50%;
    left: 50%;
    height: 14px;
    width: 14px;
    margin: -6px 0 0 -7px;
  }
}

.mobile-nav__return {
  border-right: 1px solid $color-border;
}

.mobile-nav__return-btn {
  position: relative;
  padding: 24px 0;
  width: $return-button-width;
}

.mobile-nav__icon {
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  padding-left: $gutter-site-mobile;
  padding-right: $gutter-site-mobile;
  pointer-events: none;
  overflow: hidden;
}

.mobile-nav__table {
  display: table;
  width: 100%;
}

.mobile-nav__table-cell {
  display: table-cell;
  vertical-align: middle;
  width: 1%;
  text-align: left;
  white-space: normal;
}

.mobile-nav__toggle-button {
  padding: 20px 15px;
}

.mobile-nav__dropdown {
  position: absolute;
  background-color: $color-body;
  z-index: $z-index-sub-nav;
  width: 100%;
  top: 0;
  right: -100%;
  display: none;

  .is-active + & {
    display: block;
    opacity: 1;
  }

  // Need the transition so `prepareTransition` removes class
  &.is-closing {
    transition: $transition-drawer;
    opacity: 0.99;
  }

  .mobile-nav__sublist-header {

    display: table-cell;
    vertical-align: middle;
    padding-left: $nav-button-padding;
  }

  .mobile-nav__sublist-header--main-nav-parent {
    color: $color-body-text;
  }
}

/*================ Mobile nav wrapper ================*/
.mobile-nav-wrapper {
  @include transform(translateY(-100%));
  position: absolute;
  top: 0;
  left: 0;
  background-color: $color-body;
  transition: $transition-drawer;
  display: none;
  overflow: hidden;
  width: 100%;

  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    border-bottom: 1px solid $color-border;
  }

  &.js-menu--is-open {
    display: block;
  }
}

.mobile-nav--open {
  .icon-close {
    display: none;
  }
}

.mobile-nav--close {
  .icon-hamburger {
    display: none;
  }
}

.site-header__mobile-nav {
  z-index: $z-index-mobile-nav;
  position: relative;
  background-color: $color-body;

  @include media-query($small) {
    @include display-flexbox();
    @include align-items(center);
  }
}
/*============================================================================
  A generic way to visually hide content while
  remaining accessible to screen readers (h5bp.com)
==============================================================================*/
.icon__fallback-text {
  @extend .visually-hidden;

  .no-svg & {
    // sass-lint:disable no-important
    position: static !important;
    overflow: inherit;
    clip: none;
    height: auto;
    width: auto;
    margin: 0;
  }
}

.btn--link {
  background-color: transparent;
  border: 0;
  margin: 0;
  color: $color-text;
  text-align: left;

  &:not([disabled]):hover,
  &:focus {
    color: $color-text-focus;
    background-color: transparent;
  }

  .icon {
    vertical-align: middle;
  }
}

///
/// Icons

.site-header__icons {
  position: relative;
  white-space: nowrap;

  @include media-query($small) {
    width: auto;
    padding-right: 13px;

    .btn--link,
    .site-header__cart {
    
    }
  }
}

.site-header__icons-wrapper {
  position: relative;
  @include display-flexbox();
  @include align-items(center);
  @include justify-content(flex-end);
}
/*================ MODULES ================*/
.site-header {
  position: relative;
  background-color: $color-body;

  @include media-query($small) {
    border-bottom: 1px solid $color-border;
  }

  @include media-query($medium-up) {
    padding: 0 $gutter-site;

    &.logo--center {
      padding-top: $grid-gutter;
    }
  }
}

///
/// Logo

.site-header__logo {
  margin: 15px 0;

  .logo-align--center & {
    text-align: center;
    margin: 0 auto;

    @include media-query($small) {
      text-align: left;
      margin: 15px 0;
    }
  }

  @include media-query($small) {
    padding-left: $gutter-site-mobile;
    text-align: left;

    img {
      margin: 0;
    }
  }
}

.site-header__logo-link {
  display: inline-block;
  word-break: break-word;

  .logo-align--center & {
    @include media-query($medium-up) {
      margin: 0 auto;
    }
  }
}

.site-header__logo-image {
  display: block;

  @include media-query($medium-up) {
    margin: 0 auto;
  }
}

.site-header__logo-image img {
  width: 100%;
}

.site-header__logo-image--centered img {
  margin: 0 auto;
}

///
/// Announcement bar

.announcement-bar {
  z-index: $z-index-announcement-bar;
  position: relative;
  text-align: center;
}

.announcement-bar--link {
  display: block;
}

.announcement-bar__message {
  display: block;
  padding: ($gutter-site-mobile / 2) $gutter-site-mobile;
  font-size: em(16);


  @include media-query($medium-up) {
    padding-left: $gutter-site;
    padding-right: $gutter-site;
  }
}

/*================ #Helper Classes ================*/
.clearfix {
  @include clearfix();
}

.visually-hidden {
  @include visually-hidden();
}

.visibility-hidden {
  visibility: hidden;
}

.visually-hidden--inline {
  margin: 0;
  height: 1em;
}
 
.visually-hidden--static {
  position: static !important;
}

.js-focus-hidden:focus {
  outline: none;
}

// Only show when JS is not supported
.no-js:not(html) {
  display: none;

  .no-js & {
    display: block;
  }
}

// Only show when JS is supported
.js {
  .no-js & {
    display: none;
  }
}

.hide {
  display: none !important;
}